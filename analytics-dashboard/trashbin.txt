// // pages/dashboard.tsx
// import Link from 'next/link';

// const Dashboard = () => {
//   return (
//     <div className="min-h-screen flex flex-col items-center justify-center bg-gray-800">
//       <h1 className="text-4xl font-bold mb-8 mt-4 text-white">Dashboard</h1>

//       <div className="flex items-center justify-center mb-8">
//         <Link href="/weather">
//           <button className="p-4 bg-blue-500 text-white rounded cursor-pointer">
//             Weather App
//           </button>
//         </Link>
//         <Link href="/news">
//           <button className="p-4 bg-blue-500 text-white rounded cursor-pointer ml-4">
//             News App
//           </button>
//         </Link>
//       </div>
//     </div>
//   );
// };

// export default Dashboard;

// import Link from 'next/link';
// import { useState, useEffect } from 'react';

// const Dashboard = () => {
//   const [isSideNavOpen, setIsSideNavOpen] = useState(false);
//   const [isDarkMode, setIsDarkMode] = useState(false);

//   // Toggle side navbar on small screens
//   const toggleSideNav = () => {
//     setIsSideNavOpen(!isSideNavOpen);
//   };

//   // Toggle dark/light mode
//   const toggleDarkMode = () => {
//     setIsDarkMode(!isDarkMode);
//   };

//   // Apply dark/light mode to the entire app
//   useEffect(() => {
//     if (isDarkMode) {
//       document.documentElement.classList.add('dark');
//     } else {
//       document.documentElement.classList.remove('dark');
//     }
//   }, [isDarkMode]);

//   return (
//     <div className="min-h-screen flex bg-gradient-to-br from-blue-50 to-purple-50 dark:from-gray-900 dark:to-gray-800 transition-colors duration-500">
//       {/* Side Navbar */}
//       <div
//         className={`fixed md:relative w-64 bg-white/90 dark:bg-gray-900/90 backdrop-blur-md text-white p-4 transform ${
//           isSideNavOpen ? 'translate-x-0' : '-translate-x-full'
//         } md:translate-x-0 transition-transform duration-500 z-20 shadow-lg`}
//       >
//         <h2 className="text-2xl font-bold mb-8 text-gray-800 dark:text-white">
//           Dashboard
//         </h2>
//         <ul>
//           <li className="mb-4">
//             <Link
//               href="/weather"
//               className="text-gray-700 dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 transition-colors duration-300"
//             >
//               Weather
//             </Link>
//           </li>
//           <li className="mb-4">
//             <Link
//               href="/news"
//               className="text-gray-700 dark:text-gray-300 hover:text-blue-500 dark:hover:text-blue-400 transition-colors duration-300"
//             >
//               News
//             </Link>
//           </li>
//           {/* Add more links as needed */}
//         </ul>
//       </div>

//       {/* Main Content */}
//       <div className="flex-1 flex flex-col">
//         {/* Top Navbar */}
//         <nav className="bg-white/80 dark:bg-gray-800/80 backdrop-blur-md p-4 text-gray-800 dark:text-white flex justify-between items-center shadow-md">
//           {/* Hamburger Menu (visible on small screens) */}
//           <button
//             onClick={toggleSideNav}
//             className="md:hidden p-2 focus:outline-none"
//           >
//             <svg
//               className="w-6 h-6 text-gray-800 dark:text-white"
//               fill="none"
//               stroke="currentColor"
//               viewBox="0 0 24 24"
//               xmlns="http://www.w3.org/2000/svg"
//             >
//               <path
//                 strokeLinecap="round"
//                 strokeLinejoin="round"
//                 strokeWidth="2"
//                 d="M4 6h16M4 12h16m-7 6h7"
//               ></path>
//             </svg>
//           </button>

//           {/* Dark/Light Mode Toggle */}
//           <button
//             onClick={toggleDarkMode}
//             className="p-2 focus:outline-none"
//           >
//             {isDarkMode ? (
//               <svg
//                 className="w-6 h-6 text-yellow-400"
//                 fill="none"
//                 stroke="currentColor"
//                 viewBox="0 0 24 24"
//                 xmlns="http://www.w3.org/2000/svg"
//               >
//                 <path
//                   strokeLinecap="round"
//                   strokeLinejoin="round"
//                   strokeWidth="2"
//                   d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
//                 ></path>
//               </svg>
//             ) : (
//               <svg
//                 className="w-6 h-6 text-gray-800 dark:text-white"
//                 fill="none"
//                 stroke="currentColor"
//                 viewBox="0 0 24 24"
//                 xmlns="http://www.w3.org/2000/svg"
//               >
//                 <path
//                   strokeLinecap="round"
//                   strokeLinejoin="round"
//                   strokeWidth="2"
//                   d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
//                 ></path>
//               </svg>
//             )}
//           </button>
//         </nav>

//         {/* Centered Cards */}
//         <div className="flex-1 flex items-center justify-center p-8">
//           <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
//             {/* Weather Card */}
//             <Link href="/weather">
//               <div className="bg-white/90 dark:bg-gray-800/90 backdrop-blur-md p-8 rounded-2xl shadow-lg cursor-pointer hover:scale-105 hover:shadow-2xl transition-all duration-500 border border-white/20 dark:border-gray-700/20">
//                 <h2 className="text-3xl font-bold mb-4 text-gray-800 dark:text-white">
//                   Weather
//                 </h2>
//                 <p className="text-gray-600 dark:text-gray-300">
//                   Check the latest weather updates.
//                 </p>
//               </div>
//             </Link>

//             {/* News Card */}
//             <Link href="/news">
//               <div className="bg-white/90 dark:bg-gray-800/90 backdrop-blur-md p-8 rounded-2xl shadow-lg cursor-pointer hover:scale-105 hover:shadow-2xl transition-all duration-500 border border-white/20 dark:border-gray-700/20">
//                 <h2 className="text-3xl font-bold mb-4 text-gray-800 dark:text-white">
//                   News
//                 </h2>
//                 <p className="text-gray-600 dark:text-gray-300">
//                   Stay updated with the latest news.
//                 </p>
//               </div>
//             </Link>
//           </div>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default Dashboard;

// import Link from "next/link";
// import { useState } from "react";

// const Dashboard = () => {
//   const [isSideNavOpen, setIsSideNavOpen] = useState(false);

//   // Toggle side navbar on small screens
//   const toggleSideNav = () => {
//     setIsSideNavOpen(!isSideNavOpen);
//   };

//   return (
//     <div className="min-h-screen flex bg-gradient-to-br from-blue-50 to-purple-50">
//       {/* Side Navbar */}
//       <div
//         className={`fixed md:relative w-64 bg-white/90 backdrop-blur-md p-4 transform ${
//           isSideNavOpen ? "translate-x-0" : "-translate-x-full"
//         } md:translate-x-0 transition-transform duration-500 z-20 shadow-2xl`}
//       >
//         <h2 className="text-2xl font-bold mb-8 text-gray-800 flex items-center">
//           <svg
//             className="w-8 h-8 mr-2 text-purple-600"
//             fill="none"
//             stroke="currentColor"
//             viewBox="0 0 24 24"
//             xmlns="http://www.w3.org/2000/svg"
//           >
//             <path
//               strokeLinecap="round"
//               strokeLinejoin="round"
//               strokeWidth="2"
//               d="M4 6h16M4 12h16m-7 6h7"
//             ></path>
//           </svg>
//           Dashboard
//         </h2>
//         <ul>
//           <li className="mb-4">
//             <Link
//               href="/weather"
//               className="text-gray-700 hover:text-purple-600 transition-colors duration-300 flex items-center"
//             >
//               <svg
//                 className="w-6 h-6 mr-2"
//                 fill="none"
//                 stroke="currentColor"
//                 viewBox="0 0 24 24"
//                 xmlns="http://www.w3.org/2000/svg"
//               >
//                 <path
//                   strokeLinecap="round"
//                   strokeLinejoin="round"
//                   strokeWidth="2"
//                   d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
//                 ></path>
//               </svg>
//               Weather
//             </Link>
//           </li>
//           <li className="mb-4">
//             <Link
//               href="/news"
//               className="text-gray-700 hover:text-purple-600 transition-colors duration-300 flex items-center"
//             >
//               <svg
//                 className="w-6 h-6 mr-2"
//                 fill="none"
//                 stroke="currentColor"
//                 viewBox="0 0 24 24"
//                 xmlns="http://www.w3.org/2000/svg"
//               >
//                 <path
//                   strokeLinecap="round"
//                   strokeLinejoin="round"
//                   strokeWidth="2"
//                   d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"
//                 ></path>
//               </svg>
//               News
//             </Link>
//           </li>
//           {/* Add more links as needed */}
//         </ul>
//       </div>

//       {/* Main Content */}
//       <div className="flex-1 flex flex-col">
//         {/* Top Navbar */}
//         <nav className="bg-white/80 backdrop-blur-md p-4 text-gray-800 flex justify-between items-center shadow-md">
//           {/* Hamburger Menu (visible on small screens) */}
//           <button
//             onClick={toggleSideNav}
//             className="md:hidden p-2 focus:outline-none"
//           >
//             <svg
//               className="w-6 h-6 text-gray-800"
//               fill="none"
//               stroke="currentColor"
//               viewBox="0 0 24 24"
//               xmlns="http://www.w3.org/2000/svg"
//             >
//               <path
//                 strokeLinecap="round"
//                 strokeLinejoin="round"
//                 strokeWidth="2"
//                 d="M4 6h16M4 12h16m-7 6h7"
//               ></path>
//             </svg>
//           </button>

//           {/* User Profile Icon */}
//           <div className="flex items-center">
//             <img
//               src="https://via.placeholder.com/40"
//               alt="User"
//               className="w-10 h-10 rounded-full"
//             />
//           </div>
//         </nav>

//         {/* Centered Cards */}
//         <div className="flex-1 flex items-center justify-center p-8">
//           <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
//             {/* Weather Card */}
//             <Link href="/weather">
//               <div className="bg-white/90 backdrop-blur-md p-8 rounded-2xl shadow-lg cursor-pointer hover:scale-105 hover:shadow-2xl transition-all duration-500 border border-white/20">
//                 <h2 className="text-3xl font-bold mb-4 text-gray-800 flex items-center">
//                   <svg
//                     className="w-8 h-8 mr-2 text-blue-500"
//                     fill="none"
//                     stroke="currentColor"
//                     viewBox="0 0 24 24"
//                     xmlns="http://www.w3.org/2000/svg"
//                   >
//                     <path
//                       strokeLinecap="round"
//                       strokeLinejoin="round"
//                       strokeWidth="2"
//                       d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
//                     ></path>
//                   </svg>
//                   Weather
//                 </h2>
//                 <p className="text-gray-600 mb-4">
//                   Check the latest weather updates.
//                 </p>
//                 {/* Weather Graph */}
//                 <div className="w-full h-40 bg-gray-100 rounded-lg flex items-center justify-center overflow-hidden">
//                   <img
//                     src="images/weather.png" // Replace with your image path
//                     alt="Weather Graph"
//                     className="w-full h-full object-cover"
//                     onError={(e) => {
//                       e.target.style.display = "none"; // Hide the image if it fails to load
//                     }}
//                   />
//                 </div>
//               </div>
//             </Link>

//             {/* News Card */}
//             <Link href="/news">
//               <div className="bg-white/90 backdrop-blur-md p-8 rounded-2xl shadow-lg cursor-pointer hover:scale-105 hover:shadow-2xl transition-all duration-500 border border-white/20">
//                 <h2 className="text-3xl font-bold mb-4 text-gray-800 flex items-center">
//                   <svg
//                     className="w-8 h-8 mr-2 text-purple-500"
//                     fill="none"
//                     stroke="currentColor"
//                     viewBox="0 0 24 24"
//                     xmlns="http://www.w3.org/2000/svg"
//                   >
//                     <path
//                       strokeLinecap="round"
//                       strokeLinejoin="round"
//                       strokeWidth="2"
//                       d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"
//                     ></path>
//                   </svg>
//                   News
//                 </h2>
//                 <p className="text-gray-600 mb-4">
//                   Stay updated with the latest news.
//                 </p>
//                 {/* News Image */}
//                 <div className="w-full h-40 bg-gray-100 rounded-lg flex items-center justify-center overflow-hidden">
//                   <img
//                     src="images/news.png" // Replace with your image path
//                     alt="News"
//                     className="w-full h-full object-cover"
//                     onError={(e) => {
//                       e.target.style.display = "none"; // Hide the image if it fails to load
//                     }}
//                   />
//                 </div>
//               </div>
//             </Link>
//           </div>
//         </div>
//       </div>
//     </div>
//   );
// };

// export default Dashboard;

// pages/index.tsx







 
// // components/Layout.tsx
// import Link from "next/link";

// const Layout = ({ children }: { children: React.ReactNode }) => {
//   return (
//     <div className="min-h-screen flex bg-gradient-to-br from-blue-50 to-purple-50">
//       {/* Sidebar */}
//       <div className="fixed w-64 bg-white/90 backdrop-blur-md p-4 h-full shadow-2xl z-20">
//         <h2 className="text-2xl font-bold mb-8 text-gray-800 flex items-center">
//           Dashboard
//         </h2>
//         <ul>
//           <li className="mb-4">
//             <Link
//               href="/weather"
//               className="text-gray-700 hover:text-purple-600 transition-colors duration-300 flex items-center"
//             >
//               Weather
//             </Link>
//           </li>
//           <li className="mb-4">
//             <Link
//               href="/news"
//               className="text-gray-700 hover:text-purple-600 transition-colors duration-300 flex items-center"
//             >
//               News
//             </Link>
//           </li>
//         </ul>
//       </div>

//       {/* Main Content */}
//       <div className="flex-1 flex flex-col ml-64">
//         {/* Top Navbar */}
//         <nav className="bg-white/80 backdrop-blur-md p-4 text-gray-800 flex justify-between items-center shadow-md">
//           <div className="flex items-center">
//             <img
//               src="https://via.placeholder.com/40"
//               alt="User"
//               className="w-10 h-10 rounded-full"
//             />
//           </div>
//         </nav>

//         {/* Content Area */}
//         <div className="flex-1 p-8">{children}</div>
//       </div>
//     </div>
//   );
// };

// export default Layout;
 

import Link from "next/link";
import { useState } from "react";

const Layout = ({ children }: { children: React.ReactNode }) => {
  const [isSideNavOpen, setIsSideNavOpen] = useState(false);

  // Toggle side navbar on small screens
  const toggleSideNav = () => {
    setIsSideNavOpen(!isSideNavOpen);
  };

  return (
    <div className="min-h-screen flex bg-gradient-to-br from-blue-50 to-purple-50">
      {/* Sidebar */}
      <div
        className={`fixed md:relative w-64 bg-white/90 backdrop-blur-md p-4 h-screen shadow-2xl z-20 transform ${
          isSideNavOpen ? "translate-x-0" : "-translate-x-full"
        } md:translate-x-0 transition-transform duration-500`}
      >
        <h2 className="text-2xl font-bold mb-8 text-gray-800 flex items-center">
          <svg
            className="w-8 h-8 mr-2 text-purple-600"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="2"
              d="M4 6h16M4 12h16m-7 6h7"
            ></path>
          </svg>
          Dashboard
        </h2>
        <ul>
          <li className="mb-4">
            <Link
              href="/weather"
              className="text-gray-700 hover:text-purple-600 transition-colors duration-300 flex items-center"
            >
              <svg
                className="w-6 h-6 mr-2"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth="2"
                  d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"
                ></path>
              </svg>
              Weather
            </Link>
          </li>
          <li className="mb-4">
            <Link
              href="/news"
              className="text-gray-700 hover:text-purple-600 transition-colors duration-300 flex items-center"
            >
              <svg
                className="w-6 h-6 mr-2"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth="2"
                  d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"
                ></path>
              </svg>
              News
            </Link>
          </li>
        </ul>
      </div>

      {/* Main Content */}
      <div className="flex-1 flex flex-col">
        {/* Top Navbar */}
        <nav className="bg-white/80 backdrop-blur-md p-4 text-gray-800 flex justify-between items-center shadow-md">
          {/* Hamburger Menu (visible on small screens) */}
          <button
            onClick={toggleSideNav}
            className="md:hidden p-2 focus:outline-none"
          >
            <svg
              className="w-6 h-6 text-gray-800"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                d="M4 6h16M4 12h16m-7 6h7"
              ></path>
            </svg>
          </button>

          {/* User Profile Icon */}
          <div className="flex items-center">
            <img
              src="https://via.placeholder.com/40"
              alt="User"
              className="w-10 h-10 rounded-full"
            />
          </div>
        </nav>

        {/* Content Area */}
        <div className="flex-1 p-8">{children}</div>
      </div>
    </div>
  );
};

export default Layout;
 
flex-1 flex flex-col
 
   <nav className="bg-white/80 backdrop-blur-md p-4 text-gray-800 flex justify-between items-center shadow-md">
          {/* Hamburger Menu (visible on small screens) */}
          <button
            onClick={toggleSideNav}
            className="md:hidden p-2 focus:outline-none"
          >
            <svg
              className="w-6 h-6 text-gray-800"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                strokeWidth="2"
                d="M4 6h16M4 12h16m-7 6h7"
              ></path>
            </svg>
          </button>

          {/* User Profile Icon */}
          <div className="flex items-center">
            <img
              src="https://via.placeholder.com/40"
              alt="User"
              className="w-10 h-10 rounded-full"
            />
          </div>
        </nav>
 
 <div className="min-h-screen flex bg-gradient-to-br from-blue-50 to-purple-50">
      {/* Sidebar */}
      <div className="fixed w-64 bg-white/90 backdrop-blur-md p-4 h-full shadow-2xl z-20">
        <h2 className="text-2xl font-bold mb-8 text-gray-800 flex items-center">
          Dashboard
        </h2>
        <ul>
          <li className="mb-4">
            <Link
              href="/weather"
              className="text-gray-700 hover:text-purple-600 transition-colors duration-300 flex items-center"
            >
              Weather
            </Link>
          </li>
          <li className="mb-4">
            <Link
              href="/news"
              className="text-gray-700 hover:text-purple-600 transition-colors duration-300 flex items-center"
            >
              News
            </Link>
          </li>
        </ul>
      </div>

      {/* Main Content */}
      <div className="flex-1 flex flex-col ml-64">
        {/* Top Navbar */}
        <nav className="bg-white/80 backdrop-blur-md p-4 text-gray-800 flex justify-between items-center shadow-md">
          <div className="flex items-center">
            <img
              src="https://via.placeholder.com/40"
              alt="User"
              className="w-10 h-10 rounded-full"
            />
          </div>
        </nav>

        {/* Content Area */}
        <div className="flex-1 p-8">{children}</div>
      </div>
    </div>
 
// components/Layout.tsx
import Link from "next/link";

const Layout = ({ children }: { children: React.ReactNode }) => {
  return (
    <div className="min-h-screen flex bg-gradient-to-br from-blue-50 to-purple-50">
      {/* Sidebar */}
      <div className="fixed w-64 bg-white/90 backdrop-blur-md p-4 h-full shadow-2xl z-20">
        <h2 className="text-2xl font-bold mb-8 text-gray-800 flex items-center">
          Dashboard
        </h2>
        <ul>
          <li className="mb-4">
            <Link
              href="/weather"
              className="text-gray-700 hover:text-purple-600 transition-colors duration-300 flex items-center"
            >
              Weather
            </Link>
          </li>
          <li className="mb-4">
            <Link
              href="/news"
              className="text-gray-700 hover:text-purple-600 transition-colors duration-300 flex items-center"
            >
              News
            </Link>
          </li>
        </ul>
      </div>

      {/* Main Content */}
      <div className="flex-1 flex flex-col ml-64">
        {/* Top Navbar */}
        <nav className="bg-white/80 backdrop-blur-md p-4 text-gray-800 flex justify-between items-center shadow-md">
          <div className="flex items-center">
            <img
              src="https://via.placeholder.com/40"
              alt="User"
              className="w-10 h-10 rounded-full"
            />
          </div>
        </nav>

        {/* Content Area */}
        <div className="flex-1 p-8">{children}</div>
      </div>
    </div>
  );
};

export default Layout;

 
 {/* Sidebar */}
      <div className="fixed w-64 bg-white/90 backdrop-blur-md p-4 h-full shadow-2xl z-20">
        <h2 className="text-2xl font-bold mb-8 text-gray-800 flex items-center">
          Dashboard
        </h2>
        <ul>
          <li className="mb-4">
            <Link
              href="/weather"
              className="text-gray-700 hover:text-purple-600 transition-colors duration-300 flex items-center"
            >
              Weather
            </Link>
          </li>
          <li className="mb-4">
            <Link
              href="/news"
              className="text-gray-700 hover:text-purple-600 transition-colors duration-300 flex items-center"
            >
              News
            </Link>
          </li>
        </ul>
      </div>

      {/* Main Content */}
      <div className="flex-1 flex flex-col ml-64">
        {/* Top Navbar */}
        <nav className="bg-white/80 backdrop-blur-md p-4 text-gray-800 flex justify-between items-center shadow-md">
          <div className="flex items-center">
            <img
              src="https://via.placeholder.com/40"
              alt="User"
              className="w-10 h-10 rounded-full"
            />
          </div>
        </nav>

        {/* Content Area */}
        <div className="flex-1 p-8">{children}</div>
      </div>
 

    <div>
      <h1 className="text-3xl font-bold mb-8">Welcome to the Dashboard</h1>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
        <Link href="/weather">
            <h2 className="text-3xl font-bold mb-4 text-gray-800">Weather</h2>
            <p className="text-gray-600 mb-4">Check the latest weather updates.</p>
        </Link>

        <Link href="/news">
            <h2 className="text-3xl font-bold mb-4 text-gray-800">News</h2>
            <p className="text-gray-600 mb-4">Stay updated with the latest news.</p>
        </Link>
      </div>
    </div>
 
 <div>
      <h1 className="text-3xl font-bold mb-8">Welcome to the Dashboard</h1>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
        <Link href="/weather">
            <h2 className="text-3xl font-bold mb-4 text-gray-800">Weather</h2>
            <p className="text-gray-600 mb-4">Check the latest weather updates.</p>
        </Link>

        <Link href="/news">
            <h2 className="text-3xl font-bold mb-4 text-gray-800">News</h2>
            <p className="text-gray-600 mb-4">Stay updated with the latest news.</p>
        </Link>
      </div>
 

          </a>
 

          <a className="bg-white/90 backdrop-blur-md p-8 rounded-2xl shadow-lg cursor-pointer hover:scale-105 hover:shadow-2xl transition-all duration-500 border border-white/20">
 

          </a>
 

          <a className="bg-white/90 backdrop-blur-md p-8 rounded-2xl shadow-lg cursor-pointer hover:scale-105 hover:shadow-2xl transition-all duration-500 border border-white/20">
 
../components/Layout
 
import { Provider } from "react-redux";
// import { store } from "../store";
import "../styles/globals.css";

function MyApp({ Component, pageProps }) {
  return (
    // <Provider store={store}>
      <Component {...pageProps} />
    // </Provider>
  );
}

export default MyApp;

 
</a>
 
 <a className="text-xl">
 
<a className="text-xl ml-4">
 
/weather-graph.png
 

                  <div className="text-gray-500 text-sm">Temperature Chart</div>
 

                  <div className="text-gray-500 text-sm">Breaking News</div>
 
/news-image.jpg
 
-icon.png
 
"https://via.placeholder.com/300x150?text=Breaking+News
 
  // Toggle dark/light mode
  const toggleDarkMode = () => {
    setIsDarkMode(!isDarkMode);
  };

  // Apply dark/light mode to the entire app
  useEffect(() => {
    if (isDarkMode) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }, [isDarkMode]);
 
// tailwind.config.js
module.exports = {
  darkMode: 'class',
    content: [
      './pages/**/*.{js,ts,jsx,tsx}',  // Pages ke andar wale files ko include karna
      './components/**/*.{js,ts,jsx,tsx}', // Components ke andar wale files ko include karna
    ],
    theme: {
      extend: {},
    },
    plugins: [],
  }
  
 
 <a className="text-lg font-semibold hover:bg-gray-700 p-2 rounded">
 
</a>
 
<a className="text-center">
 
 <a className="text-lg font-semibold hover:bg-gray-700 p-2 rounded">
 
</a>
 

                <a className="text-lg font-semibold hover:bg-gray-700 p-2 rounded">
 
</a>
 

                <a className="text-center">
 
</a>
 

                <a className="text-center">
 

                </a>
 

                <a className="text-center">
 
// "use client";
// // pages/news.tsx
// import React from "react";
// import Header from "../components/Header";
// import Navbar from "../components/Navbar";
// import TopHeadlines from "../components/TopHeadlines";
// const NewsApp = () => {
//   return (
//     <div>
//       <main className="px-2 md:px-20">
//         <Header />
//         <Navbar />
//         <section className="flex justify-between">
//           <main className="mt-4">
//             <TopHeadlines />
//           </main>
//         </section>
//       </main>
//     </div>
//   );
// };

// export default NewsApp;

// "use client";
// import React from "react";
// import { useState } from "react";
// import { useEffect } from "react";
// import Head from "next/head";
// import Image from "next/image";
// import Link from "next/link";
// // import { error } from "console";
// // 
// const newsApi = "804b5ac5eb154a81ad4dc4b10ada6b7f";
// const newsApiUrl = `https://newsapi.org/v2/top-headlines?country=us&apiKey=${newsApi}`;

// Craete a custom component
// const NewsCard = ({ article }) => {
//   return (
//     <div>
//       <Image
//         src={article.urlToImage || "./"}
//         alt={article.title}
//         width={250}
//         height={250}
//         className="w-full h-64 object-fill"
//         unoptimized={true}
//       />
//       <h3 className="text-xl font-semibold mt-4 mx-4">{article.title}</h3>
//       <p className="text-gray-500">{article.description}</p>
//       <p className="text-gray-500">{article.content}</p>
//     </div>
//   );
// };

// // navbar
// // const Navbar = ({ category, setCategory }) => {
// //   return (
// //     <div className="flex flex-wrap justify-center items-center gap-4 my-8">
// //       {category.map((cat) => (
// //         <button
// //           key={cat}
// //           className={`${
// //             category === cat
// //               ? "bg-blue-500 text-white"
// //               : "bg-gray-200 text-gray-800 hover:bg-gray-300 "
// //           } px-4 py-2 rounded-md`}
// //           onClick={() => setCategory(cat)}
// //         >
// //           {cat}
// //         </button>
// //       ))}
// //     </div>
// //   );
// // };

// const Navbar = ({ categories, setCategory }) => {
//   return (
//     <div className="flex flex-wrap justify-center items-center gap-4 my-8">
//       {categories.map((cat) => (
//         <button
//           key={cat}
//           className={`${
//             cat === setCategory // Fix comparison here
//               ? "bg-blue-500 text-white"
//               : "bg-gray-200 text-gray-800 hover:bg-gray-300 "
//           } px-4 py-2 rounded-md`}
//           onClick={() => setCategory(cat)}
//         >
//           {cat}
//         </button>
//       ))}
//     </div>
//   );
// };

// // create the main page
// // const Page = () => {
// //   const [news, setNews] = useState([]);
// //   const [loading, setLoading] = useState(true);
// //   const [category, setCategory] = useState("all");

// //   useEffect(() => {
// //     const query = category === "all" ? "" : `&category=${category}`;
// //     fetch(newsApiUrl + query)
// //       .then((response) => response.json())
// //       .then((data) => {
// //         setNews(data.articles || []);
// //         setLoading(false);
// //       })
// //       .catch((error) => {
// //         console.error(error);
// //         setLoading(false);
// //       });
// //   }, [category]);
// //   return (
// //     <>
// //       <Head>
// //         <title>News App</title>
// //         <meta
// //           name="description"
// //           content="A news app built with nextjs and taiwlind css"
// //         />
// //         <link rel="icon" href="/favicon.ico" />
// //       </Head>

// //       <main>
// //         <h1>News app</h1>
// //         <Navbar category={category} setCategory={setCategory} />
// //         <div>
// //           {loading ? (
// //             <p>Loading...</p>
// //           ) : news && news.length > 0 ? (
// //             news.map((article) => (
// //               <Link href={article.url} key={article.url}>
// //                 <NewsCard article={article} />
// //               </Link>
// //             ))
// //           ) : (
// //             <p>No news found</p>
// //           )}
// //         </div>
// //       </main>
// //     </>
// //   );
// // };

// const Page = () => {
//   const [news, setNews] = useState([]);
//   const [loading, setLoading] = useState(true);
//   const [category, setCategory] = useState("all");
//   const categories = ["all", "business", "sports", "technology"]; // Categories array

//   useEffect(() => {
//     const query = category === "all" ? "" : `&category=${category}`;
//     fetch(newsApiUrl + query)
//       .then((response) => response.json())
//       .then((data) => {
//         setNews(data.articles || []);
//         setLoading(false);
//       })
//       .catch((error) => {
//         console.error(error);
//         setLoading(false);
//       });
//   }, [category]);

//   return (
//     <>
//       <Head>
//         <title>News App</title>
//         <meta
//           name="description"
//           content="A news app built with nextjs and taiwlind css"
//         />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>

//       <main>
//         <h1>News app</h1>
//         <Navbar categories={categories} setCategory={setCategory} /> {/* Pass categories as array */}
//         <div>
//           {loading ? (
//             <p>Loading...</p>
//           ) : news && news.length > 0 ? (
//             news.map((article) => (
//               <Link href={article.url} key={article.url}>
//                 <NewsCard article={article} />
//               </Link>
//             ))
//           ) : (
//             <p>No news found</p>
//           )}
//         </div>
//       </main>
//     </>
//   );
// };

// export default Page;
// ;



// "use client";
// import React, { useState, useEffect } from "react";
// import Head from "next/head";
// import Image from "next/image";
// import Link from "next/link";

// // News API Configuration
// const newsApi = "804b5ac5eb154a81ad4dc4b10ada6b7f";
// const newsApiUrl = `https://newsapi.org/v2/top-headlines?country=us&apiKey=${newsApi}`;

// // NewsCard Component
// const NewsCard = ({ article }) => {
//   return (
//     <div className="bg-white shadow-lg rounded-lg overflow-hidden hover:shadow-xl transition-shadow duration-300">
//       <Image
//         src={article.urlToImage || "/default-image.jpg"}
//         alt={article.title}
//         width={400}
//         height={250}
//         className="w-full h-48 object-cover"
//         unoptimized={true}
//       />
//       <div className="p-4">
//         <h3 className="text-xl font-semibold text-gray-800 truncate">{article.title}</h3>
//         <p className="text-gray-600 text-sm mt-2">{article.description}</p>
//         <p className="text-gray-500 text-xs mt-2 line-clamp-3">{article.content}</p>
//       </div>
//     </div>
//   );
// };

// // Navbar Component
// const Navbar = ({ categories, setCategory }) => {
//   return (
//     <div className="flex flex-wrap justify-center items-center gap-4 my-8">
//       {categories.map((cat) => (
//         <button
//           key={cat}
//           className={`${
//             cat === setCategory
//               ? "bg-blue-500 text-white"
//               : "bg-gray-200 text-gray-800 hover:bg-gray-300"
//           } px-4 py-2 rounded-md text-sm font-medium transition-all duration-300`}
//           onClick={() => setCategory(cat)}
//         >
//           {cat}
//         </button>
//       ))}
//     </div>
//   );
// };

// // Main Page Component
// const Page = () => {
//   const [news, setNews] = useState([]);
//   const [loading, setLoading] = useState(true);
//   const [category, setCategory] = useState("all");
//   const categories = ["all", "business", "sports", "technology"]; // Categories array

//   useEffect(() => {
//     const query = category === "all" ? "" : `&category=${category}`;
//     fetch(newsApiUrl + query)
//       .then((response) => response.json())
//       .then((data) => {
//         setNews(data.articles || []);
//         setLoading(false);
//       })
//       .catch((error) => {
//         console.error(error);
//         setLoading(false);
//       });
//   }, [category]);

//   return (
//     <>
//       <Head>
//         <title>News App</title>
//         <meta name="description" content="A news app built with Next.js and Tailwind CSS" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>

//       <main className="max-w-screen-lg mx-auto p-4">
//         <h1 className="text-3xl font-bold text-center my-6">News App</h1>
//         <Navbar categories={categories} setCategory={setCategory} />
        
//         <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
//           {loading ? (
//             <p className="col-span-full text-center text-xl">Loading...</p>
//           ) : news && news.length > 0 ? (
//             news.map((article) => (
//               <Link href={article.url} key={article.url}>
//                   <NewsCard article={article} />
//               </Link>
//             ))
//           ) : (
//             <p className="col-span-full text-center text-xl">No news found</p>
//           )}
//         </div>
//       </main>
//     </>
//   );
// };

// export default Page;

 

                </a>
 

                <a>
 
news.map((article) => (
 
stylesheet
 
{ removeDuplicateData } from '@/utils
 
Article from '@/components/Article'
 
{ getNewsSearch } from '@/api
 
process.env.API_TOKEN_NEWS
 
process.env.API_TOKEN_NEWS
 
 process.env.NEWS_API_KEY
 
import { news } from "@/types"

export const removeDuplicateData = (articles:any) => {
  const randomArticle:news[] = articles?.articles
  const filterArticles = randomArticle.filter(article => article?.source.id !== null)
  return filterArticles
}
 
import { getNewsSearch } from '@/api'
import Article from '@/components/Article'
import { removeDuplicateData } from '@/utils'

const World =async  () => {
  const newsWorld = await getNewsSearch("world")
  const filterArticles = removeDuplicateData(newsWorld)

  return (
    <div className='w-[700px]'>
      {filterArticles.map((article,idx) => (
        <div key={`${article?.title}-${idx}`}>
          <Article data={article} />
        </div>
      ))}
    </div>
  )
}

export default World
 
import { getNewsSearch } from '@/api'
import Article from '@/components/Article'
import { removeDuplicateData } from '@/utils'

const Sports = async () => {
  const newsWorld = await getNewsSearch("sports")
  const filterArticles = removeDuplicateData(newsWorld)

  return (
    <div className='w-[700px]'>
      {filterArticles.map((article,idx) => (
        <div key={`${article?.title}-${idx}`}>
          <Article data={article} />
        </div>
      ))}
    </div>
  )
}

export default Sports
 
import { getNewsSearch } from '@/api'
import Article from '@/components/Article'
import { removeDuplicateData } from '@/utils'

const Science = async () => {
  const newsWorld = await getNewsSearch("science")
  const filterArticles = removeDuplicateData(newsWorld)

  return (
    <div className='w-[700px]'>
      {filterArticles.map((article,idx) => (
        <div key={`${article?.title}-${idx}`}>
          <Article data={article} />
        </div>
      ))}
    </div>
  )
}

export default Science
 
import { getNewsSearch } from '@/api'
import Article from '@/components/Article'
import { removeDuplicateData } from '@/utils'

const Indonesia = async () => {
  const newsWorld = await getNewsSearch("indonesia")
  const filterArticles = removeDuplicateData(newsWorld)

  return (
    <div className='w-[700px]'>
      {filterArticles.map((article,idx) => (
        <div key={`${article?.title}-${idx}`}>
          <Article data={article} />
        </div>
      ))}
    </div>
  )
}

export default Indonesia
 
import { getNewsSearch } from '@/api'
import Article from '@/components/Article'
import { removeDuplicateData } from '@/utils'

const Business = async () => {
  const newsWorld = await getNewsSearch("business")
  const filterArticles = removeDuplicateData(newsWorld)

  return (
    <div className='w-[700px]'>
      {filterArticles.map((article,idx) => (
        <div key={`${article?.title}-${idx}`}>
          <Article data={article} />
        </div>
      ))}
    </div>
  )
}

export default Business
 
"use client";
import { NextPage } from 'next';

interface ErrorProps {
  statusCode: number;
}

const ErrorPage: NextPage<ErrorProps> = ({ statusCode }) => {
  return (
    <div>
      {statusCode
        ? `An error ${statusCode} occurred on server`
        : 'An error occurred on client'}
    </div>
  );
};

ErrorPage.getInitialProps = async ({ res, err }) => {
  const statusCode = res ? res.statusCode : err ? err.statusCode : 404;
  return { statusCode };
};

export default ErrorPage;

 
import { getNewsTopHeadlines } from '../pages/api'
import { removeDuplicateData } from '../utils'
import Article from './Article'

const TopHeadlines = async () => {
  const newsTop = await getNewsTopHeadlines()
  const filterArticles = removeDuplicateData(newsTop)

  return (
    <div className='w-[700px]'>
      {filterArticles.map((article,idx) => (
        <div key={`${article?.title}-${idx}`}>
          <Article data={article} />
        </div>
      ))}
    </div>
  )
}

export default TopHeadlines
 
import { getNewsSearch } from '@/api'
import RandomArticle from './RandomArticle'
import { removeDuplicateData } from '@/utils'

const RandomNews = async () => {
  const randomNews = await getNewsSearch("random news")
  const filterArticles = removeDuplicateData(randomNews)


  return (
    <div className='mt-4 w-[450px] border-l border-gray-300'>
      <h1 className="pl-2 text-2xl font-fold underline">Random News</h1>
      {filterArticles.map((article, idx) => (
        <div key={`${article?.title}-${idx}`}>
          <RandomArticle data={article} />
        </div>
      ))}
    </div>
  )
}

export default RandomNews
 
{ removeDuplicateData } from '@/utils'
 
